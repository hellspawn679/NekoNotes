events{
    worker_connections  1000;

}
http{
    server{
        listen 80;
        server_name localhost;

    location / {
        proxy_pass http://server:5000;  # Point to your Flask app service (assuming it's named 'server' in Docker Compose)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /qna {  # Route to access the '/qna' endpoint in Flask
        proxy_pass http://server:5000/qna;  # Update with your actual endpoint
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /text_generation {  # Route to access the '/qna' endpoint in Flask
        proxy_pass http://server:5000/text_generation;  # Update with your actual endpoint
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /translate {  # Route to access the '/qna' endpoint in Flask
        proxy_pass http://server:5000/translate;  # Update with your actual endpoint
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /summarize {  # Route to access the '/qna' endpoint in Flask
        proxy_pass http://server:5000/summarize;  # Update with your actual endpoint
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    }
}